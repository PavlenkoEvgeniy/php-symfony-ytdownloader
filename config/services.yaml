# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            string $appVersion: '%env(APP_VERSION)%'
            string $downloadsDir: '%env(resolve:APP_DOWNLOADS_DIR)%'
            string $telegramBotToken: '%env(TELEGRAM_BOT_TOKEN)%'
            string $telegramHostUrl: '%env(TELEGRAM_HOST_URL)%'
            bool $telegramBotEnabled: '%env(bool:TELEGRAM_BOT_ENABLED)%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    gedmo.mapping.driver.attribute:
        class: Gedmo\Mapping\Driver\AttributeReader

    # Timestampable
    gedmo.listener.timestampable:
        class: Gedmo\Timestampable\TimestampableListener
        tags:
            - { name: doctrine.event_listener, event: 'prePersist' }
            - { name: doctrine.event_listener, event: 'onFlush' }
            - { name: doctrine.event_listener, event: 'loadClassMetadata' }
        calls:
            - [ setAnnotationReader, [ "@gedmo.mapping.driver.attribute" ] ]
            - [ setClock, [ '@clock' ] ]

    # SoftDeleteable
    gedmo.listener.softdeleteable:
        class: Gedmo\SoftDeleteable\SoftDeleteableListener
        tags:
            - { name: doctrine.event_listener, event: 'onFlush' }
            - { name: doctrine.event_listener, event: 'loadClassMetadata' }
        calls:
            - [ setAnnotationReader, [ "@gedmo.mapping.driver.attribute" ] ]
            - [ setClock, [ '@clock' ] ]

    # File size human view extension
    OskarStark\Twig\ReadableFilesizeExtension:
        tags: [ 'twig.extension' ]

    # Redis for sessions (database 1)
    redis.session:
        class: Redis
        factory: ['Symfony\Component\Cache\Adapter\RedisAdapter', 'createConnection']
        arguments:
            - '%env(REDIS)%'
        calls:
            - select: [1]

    # Session handler for Redis
    session.handler.redis:
        class: Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler
        arguments:
            - '@redis.session'

    # Messenger transport
    Symfony\Component\Messenger\Transport\TransportInterface: '@messenger.transport.async'

    # Rabbit queue statistics
    App\Service\RabbitMQApiQueueService:
        arguments:
            $rabbitmqHost: '%env(RABBIT_HOST)%'
            $rabbitmqPort: '%env(RABBIT_MANAGEMENT_PORT)%'
            $rabbitmqUser: '%env(RABBIT_USER)%'
            $rabbitmqPassword: '%env(RABBIT_PASSWORD)%'
            $rabbitmqVhost: '%env(RABBIT_VHOST)%'
